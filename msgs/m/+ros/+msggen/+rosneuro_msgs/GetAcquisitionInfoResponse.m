
classdef GetAcquisitionInfoResponse < ros.Message
    %GetAcquisitionInfoResponse MATLAB implementation of rosneuro_msgs/GetAcquisitionInfoResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'rosneuro_msgs/GetAcquisitionInfoResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '3b40cb5f91ef3aa85c622c1b480dc7f5' % The MD5 Checksum of the message definition
        PropertyList = { 'Frame' 'Result' 'DeviceModel' 'DeviceId' } % List of non-constant message properties
        ROSPropertyList = { 'frame' 'result' 'device_model' 'device_id' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.rosneuro_msgs.NeuroFrame' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Frame
        Result
        DeviceModel
        DeviceId
    end
    methods
        function set.Frame(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.rosneuro_msgs.NeuroFrame'};
            validateattributes(val, validClasses, validAttributes, 'GetAcquisitionInfoResponse', 'Frame')
            obj.Frame = val;
        end
        function set.Result(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GetAcquisitionInfoResponse', 'Result');
            obj.Result = logical(val);
        end
        function set.DeviceModel(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GetAcquisitionInfoResponse', 'DeviceModel');
            obj.DeviceModel = char(val);
        end
        function set.DeviceId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'GetAcquisitionInfoResponse', 'DeviceId');
            obj.DeviceId = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.rosneuro_msgs.GetAcquisitionInfoResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.rosneuro_msgs.GetAcquisitionInfoResponse;
            obj.reload(strObj);
        end
    end
end
